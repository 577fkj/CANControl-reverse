name: Update Firmware

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 00:00 UTC 触发，可以根据需要调整 cron 表达式
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      pull-requests: write      # 'write' access to pull requests

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run your script
      run: |
        cd fw
        python save_new_bin.py

    - name: Check for changes
      id: check_changes
      run: |
        git add .
        if git diff-index --quiet HEAD --; then
          echo "No changes detected"
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "changes_detected=true" >> $GITHUB_OUTPUT
        fi

    - name: Get list of changed files
      if: steps.check_changes.outputs.changes_detected == 'true'
      id: get_changed_files
      run: |
        echo "files=$(git diff --name-only --cached | tr '\n' ' ')" >> $GITHUB_OUTPUT
        {
          echo 'filesn<<EOF'
          git diff --name-only --cached
          echo EOF
        } >> $GITHUB_OUTPUT

    - name: Commit changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git commit -m "Update fw"

    - name: Push changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

    - name: Calculate MD5 and prepare release notes
      if: steps.check_changes.outputs.changes_detected == 'true'
      id: generate_md5
      run: |
        md5sum ${{ steps.get_changed_files.outputs.files }} > md5sums.txt
        echo "## Changed Files and their MD5 checksums:" > release_notes.md
        cat md5sums.txt >> release_notes.md

    - name: Get timestamp
      id: timestamp
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: echo "timestamp=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
  
    - name: Create GitHub release
      if: steps.check_changes.outputs.changes_detected == 'true'
      uses: softprops/action-gh-release@v2
      with:
          tag_name: CANControl-${{ steps.timestamp.outputs.timestamp }}
          files: ${{ steps.get_changed_files.outputs.filesn }}
          body_path: release_notes.md  # 使用包含 MD5 校验和的文件作为 release 说明
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}